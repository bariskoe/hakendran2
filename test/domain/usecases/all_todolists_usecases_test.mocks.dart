// Mocks generated by Mockito 5.4.2 from annotations
// in baristodolistapp/test/domain/usecases/all_todolists_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:baristodolistapp/domain/entities/todolist_entity.dart' as _i7;
import 'package:baristodolistapp/domain/failures/failures.dart' as _i5;
import 'package:baristodolistapp/domain/parameters/todolist_entity_parameters.dart'
    as _i6;
import 'package:baristodolistapp/domain/repositories/all_todolists_repository.dart'
    as _i3;
import 'package:baristodolistapp/models/todo_list_update_model.dart' as _i8;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AllTodoListsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAllTodoListsRepository extends _i1.Mock
    implements _i3.AllTodoListsRepository {
  MockAllTodoListsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> createNewTodoList(
          {required _i6.TodoListEntityParameters? todoListEntityParameters}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewTodoList,
          [],
          {#todoListEntityParameters: todoListEntityParameters},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #createNewTodoList,
            [],
            {#todoListEntityParameters: todoListEntityParameters},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.TodoListEntity>>>
      getAllTodoLists() => (super.noSuchMethod(
            Invocation.method(
              #getAllTodoLists,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i7.TodoListEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.TodoListEntity>>(
              this,
              Invocation.method(
                #getAllTodoLists,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.TodoListEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, Map<String, dynamic>?>>
      getAllTodoListsFromBackend() => (super.noSuchMethod(
            Invocation.method(
              #getAllTodoListsFromBackend,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, Map<String, dynamic>?>>.value(
                _FakeEither_0<_i5.Failure, Map<String, dynamic>?>(
              this,
              Invocation.method(
                #getAllTodoListsFromBackend,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, Map<String, dynamic>?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> updateSpecificListParameters(
          {required _i8.TodoListUpdateModel? todoListUpdateModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSpecificListParameters,
          [],
          {#todoListUpdateModel: todoListUpdateModel},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #updateSpecificListParameters,
            [],
            {#todoListUpdateModel: todoListUpdateModel},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> deleteSpecifiTodoList(
          {required String? uid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSpecifiTodoList,
          [],
          {#uid: uid},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #deleteSpecifiTodoList,
            [],
            {#uid: uid},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>>
      checkRepeatPeriodsAndResetAccomplishedIfNeccessary() =>
          (super.noSuchMethod(
            Invocation.method(
              #checkRepeatPeriodsAndResetAccomplishedIfNeccessary,
              [],
            ),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
                _FakeEither_0<_i5.Failure, bool>(
              this,
              Invocation.method(
                #checkRepeatPeriodsAndResetAccomplishedIfNeccessary,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> deleteAllTodoLists() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllTodoLists,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #deleteAllTodoLists,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);
}
